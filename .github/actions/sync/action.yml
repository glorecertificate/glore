name: Sync
description: Synchronize the local database schema with the remote database and run code checks.

outputs:
  migrations:
    description: Number of new migrations compared to the remote database.
    value: ${{ steps.migrations.outputs.all_changed_files }}
  has-updates:
    description: Whether there are any new migrations or configuration changes.
    value: ${{ steps.config.outputs.any_changed || steps.migrations.outputs.any_changed }}
  updated:
    description: Whether there were any updates to the database.
    value: ${{ steps.push.outputs.updated }}
  db-logs-url:
    description: URL to the database logs.
    value: ${{ steps.db-logs.outputs.url || '' }}

runs:
  using: composite
  steps:
    - name: Verify configuration changes
      id: config
      uses: tj-actions/changed-files@v46
      with:
        files: apps/*/supabase/config.toml
    - name: Verify migration changes
      id: migrations
      uses: tj-actions/changed-files@v46
      with:
        files: apps/*/supabase/migrations/*.sql
    - name: Set up environment
      uses: ./.github/actions/setup
    - name: Push database updates
      id: push
      if: steps.config.outputs.any_changed || steps.migrations.outputs.any_changed
      shell: sh
      run: |
        if pnpm db push; then
          echo updated=true >> $GITHUB_OUTPUT
        else
          echo "::error::Failed to push database updates"
          exit 1
        fi
    - name: Generate updated types
      if: steps.push.outputs.updated == 'true'
      shell: sh
      run: |
        if ! pnpm typegen; then
          echo "::error::Failed to generate updated types"
          exit 1
        fi
    - name: Run code checks
      uses: ./.github/actions/code-checks
    - name: Output database logs
      id: db-logs
      if: steps.push.outputs.updated == 'true'
      shell: sh
      run: |
        PROJECT_ID=$(echo "$SUPABASE_DB_URL" | sed -E 's|.*@db\.([^.]+)\.supabase\.co:5432/postgres|\1|')
        echo "url=$SUPABASE_PROJECT_URL/$PROJECT_ID" >> $GITHUB_OUTPUT
