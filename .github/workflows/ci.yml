name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
  merge_group:
    types:
      - checks_requested

env:
  NEXT_TELEMETRY_DISABLED: true
  SUPABASE_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TELEMETRY_DISABLED: true
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  sync-db:
    name: Sync database
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && !startsWith(github.event.head_commit.message, 'chore(release)') }}
    permissions:
      contents: read
    environment: Preview
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    outputs:
      migrations: ${{ steps.verify-migrations.outputs.all_changed_files }}
      has-migrations: ${{ steps.verify-migrations.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: |
          pnpm install --dev --frozen-lockfile --strict-peer-dependencies
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Verify configuration changes
        id: verify-config
        uses: tj-actions/changed-files@v46
        with:
          files: 'apps/*/supabase/config.toml'
      - name: Verify new migrations
        id: verify-migrations
        uses: tj-actions/changed-files@v46
        with:
          files: 'apps/*/supabase/migrations/*.sql'
      - name: Skip database push
        if: ${{ steps.verify-config.outputs.any_changed != 'true' && steps.verify-migrations.outputs.any_changed != 'true' }}
        run: echo "::notice::No changes detected, skipping push."
      - run: pnpm db push
        if: ${{ steps.verify-config.outputs.any_changed == 'true' || steps.verify-migrations.outputs.any_changed == 'true' }}
        working-directory: ${{ vars.APP_PATH }}

  deploy-preview:
    name: Deploy preview
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'chore(release)') }}
    permissions:
      checks: write
      contents: read
      pull-requests: read
    environment: Preview
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install and build dependencies
        run: |
          pnpm install --frozen-lockfile --strict-peer-dependencies
          pnpm build --filter @repo/*
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Run commitlint on push
        if: github.event_name == 'push' && !github.event.forced
        run: |
          if ! commitlint --from ${{ github.event.before }} --to ${{ github.event.after }} --verbose; then
            echo "::warning::Cannot execute commitlint on latest events, running on last commit instead."
            commitlint --last --verbose
          fi
      - name: Run commitlint on forced push
        if: github.event.forced
        run: commitlint --last --verbose
      - name: Run commitlint on pull request
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' && !github.event.forced
        run: commitlint --last --verbose
        # TODO: fix and apply the range below
        # run: commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.commits[-1] }} --verbose
      - run: pnpm check

  revert-migrations:
    name: Revert migrations
    runs-on: ubuntu-latest
    needs: [sync-db]
    if: ${{ needs.sync-db.outputs.has-migrations == 'true' && failure() }}
    permissions:
      contents: read
    environment: Preview
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: |
          pnpm install --dev --frozen-lockfile --strict-peer-dependencies
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Revert applied migrations
        working-directory: ${{ vars.APP_PATH }}
        run: |
          count=$(echo "${{ needs.sync-db.outputs.migrations }}" | wc -w)
          pnpm db revert $count
