name: Deploy

on:
  push:
    tags:
      - v*

env:
  NEXT_TELEMETRY_DISABLED: true
  SUPABASE_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TELEMETRY_DISABLED: true
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  sync-db:
    name: Sync database
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: Production
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    outputs:
      migrations: ${{ steps.verify-migrations.outputs.all_changed_files }}
      has-migrations: ${{ steps.verify-migrations.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: |
          pnpm install --dev --frozen-lockfile --strict-peer-dependencies
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Verify configuration changes
        id: verify-config
        uses: tj-actions/changed-files@v46
        with:
          files: 'apps/*/supabase/config.toml'
      - name: Verify new migrations
        id: verify-migrations
        uses: tj-actions/changed-files@v46
        with:
          files: 'apps/*/supabase/migrations/*.sql'
      - name: Skip database push
        if: ${{ steps.verify-config.outputs.any_changed != 'true' && steps.verify-migrations.outputs.any_changed != 'true' }}
        run: echo "::notice::No changes detected, skipping push."
      - run: pnpm db push
        if: ${{ steps.verify-config.outputs.any_changed == 'true' || steps.verify-migrations.outputs.any_changed == 'true' }}
        working-directory: ${{ vars.APP_PATH }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [sync-db]
    permissions:
      contents: read
      deployments: write
    environment:
      name: Production
      url: ${{ steps.vercel.outputs.deployment-url }}
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_API_MODEL: ${{ vars.OPENAI_MODEL }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install and build dependencies
        run: |
          pnpm install --frozen-lockfile --strict-peer-dependencies
          pnpm build --filter @repo/*
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Deploy to Vercel
        id: vercel
        run: |
          vercel telemetry disable
          vercel pull --yes --prod --token ${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "deployment-url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT

  revert-migrations:
    name: Revert migrations
    runs-on: ubuntu-latest
    needs: [sync-db]
    if: ${{ failure() && needs.sync-db.outputs.has-migrations == 'true' }}
    permissions:
      contents: read
    environment: Production
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: |
          pnpm install --dev --frozen-lockfile --strict-peer-dependencies
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Revert applied migrations
        working-directory: ${{ vars.APP_PATH }}
        run: |
          count=$(echo "${{ needs.sync-db.outputs.migrations }}" | wc -w)
          pnpm db revert $count
