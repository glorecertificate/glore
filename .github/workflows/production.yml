name: Production

on:
  push:
    tags:
      - v*
  workflow_dispatch:
  merge_group:
    types:
      - checks_requested

env:
  SUPABASE_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  NEXT_TELEMETRY_DISABLED: 1
  TURBO_TELEMETRY_DISABLED: 1
  VERCEL_TELEMETRY_DISABLED: 1

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.sync.outputs.db-logs-url }}
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_PROJECT_URL: ${{ vars.SUPABASE_PROJECT_URL }}
    permissions:
      checks: write
      contents: read
    outputs:
      migrations: ${{ steps.sync.outputs.migrations }}
      has-updates: ${{ steps.sync.outputs.has-updates }}
      updated: ${{ steps.sync.outputs.updated }}
    steps:
      - uses: actions/checkout@v5
      - name: Run synchronization
        id: sync
        uses: ./.github/actions/sync

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: sync
    if: success()
    environment:
      name: Production
      url: ${{ steps.deploy.outputs.url }}
    env:
      VERCEL_PROJECT_URL: ${{ vars.VERCEL_PROJECT_URL }}
    permissions:
      checks: write
      contents: write
    steps:
      - uses: actions/checkout@v5
      - name: Run deployment
        id: deploy
        uses: ./.github/actions/deploy
        with:
          environment: production

  revert:
    name: Revert
    runs-on: ubuntu-latest
    needs: sync
    if: needs.sync.outputs.has-updates && needs.sync.outputs.updated && failure()
    environment:
      name: Production
      url: ${{ steps.revert.outputs.db-logs-url }}
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_PROJECT_URL: ${{ vars.SUPABASE_PROJECT_URL }}
    permissions:
      checks: write
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Revert database changes
        id: revert
        uses: ./.github/actions/revert
        with:
          migrations: ${{ needs.sync.outputs.migrations }}
