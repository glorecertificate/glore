import { type Options } from './types'

export const ESLINT_OPTIONS = {
  allowRelativeImports: 'siblings',
  customExternalImports: [],
  customInternalImports: ['^@repo/**'],
  customSideEffectImports: [],
  emptyLineAfterReturn: true,
  exportLast: false,
  ignoreJs: false,
  ignoreTs: false,
  importGroups: [
    'custom-side-effect',
    ['side-effect', 'side-effect-style'],
    'builtin',
    'custom-external',
    'external',
    'custom-internal',
    'internal',
    ['parent', 'index', 'sibling'],
    'types',
  ],
  includeDotfiles: false,
  includeRoot: true,
  internalImports: ['^@/**'],
  maxLines: 300,
  newlineAfterImport: true,
  newlinesBetweenGroups: 'always',
  nodePrefix: 'always',
  preferArrow: true,
  optimizeTypedRules: false,
  prettier: true,
  react: false,
  removeUnusedImports: true,
  restrictedImports: [],
  sortArrays: true,
  sortDestructuredKeys: true,
  sortExports: true,
  sortInterfaces: true,
  sortObjectKeys: true,
  sortProps: true,
  tailwind: {
    allowedClasses: ['dark', '^group(?:\\/(\\S*))?$', '^peer(?:\\/(\\S*))?$'],
    attributes: ['class', 'className', '.*ClassName'],
    callees: ['cc', 'clb', 'clsx', 'cn', 'cnb', 'ctl', 'cva', 'cx', 'dcnb', 'objstr', 'tv', 'twJoin', 'twMerge'],
    entryPoint: 'src/app/globals.css',
    printWidth: 140,
    variables: ['className', 'classNames', 'classes', 'style', 'styles'],
  },
  tsconfig: './tsconfig.json',
  turbo: true,
  typeCheck: true,
} satisfies Options
